@mixin borderColourUtilities 
{
    @each $key, $colour-map in $colours
    {        
        @each $cm-key, $value in $colour-map
        {
            $key-name: "-" + $cm-key;

            @if $cm-key == "base"
            {
                $key-name: "";
            }

            .border-#{$key}#{$key-name} 
            {
                @include borderAll($value, $border-thickness);
            }
        }
    }
}

.border
{
    @include borderAll($border-colour, $border-thickness);
}

.border-icon
{
    @include mutedBorder();
}

.border-top
{
    @include borderTop($border-colour, $border-thickness);

}
.border-right
{
    @include borderRight($border-colour, $border-thickness);

}
.border-bottom
{
    @include borderBottom($border-colour, $border-thickness);
}

.border-left-transparent
{
    @include borderLeft(transparent, $border-thickness);
}

.border-top-transparent
{
    @include borderTop(transparent, $border-thickness);

}
.border-right-transparent
{
    @include borderRight(transparent, $border-thickness);

}
.border-bottom-transparent
{
    @include borderBottom(transparent, $border-thickness);
}

.border-left-transparent
{
    @include borderLeft(transparent, $border-thickness);
}

.border-0
{
    border-top-width: 0;
    border-right-width: 0;
    border-bottom-width: 0;
    border-left-width: 0;
}

.border-top-0
{
    border-top: 0;
}

.border-right-0
{
    border-right: 0;
}

.border-bottom-0
{
    border-bottom: 0;
}

.border-left-0
{
    border-left: 0;
}

@include borderColourUtilities;

.rounded 
{
    @include borderRadius;
}

.rounded-sm
{
    @include borderRadius(calc($border-radius/2));
}

.rounded-top 
{ 
    border-top-left-radius: $border-radius;
    border-top-right-radius: $border-radius;
}

.rounded-right 
{ 
    border-top-right-radius: $border-radius;
    border-bottom-right-radius: $border-radius;
}

.rounded-bottom 
{ 
    border-bottom-right-radius: $border-radius;
    border-bottom-left-radius: $border-radius;
}

.rounded-left 
{ 
    border-top-left-radius: $border-radius;
    border-bottom-left-radius: $border-radius;
}

.rounded-top-sm
{ 
    border-top-left-radius: calc($border-radius/2);
    border-top-right-radius: calc($border-radius/2);
}

.rounded-right-sm
{ 
    border-top-right-radius: calc($border-radius/2);
    border-bottom-right-radius: calc($border-radius/2);
}

.rounded-bottom-sm
{ 
    border-bottom-right-radius: calc($border-radius/2);
    border-bottom-left-radius: calc($border-radius/2);
}

.rounded-left-sm
{ 
    border-top-left-radius: calc($border-radius/2);
    border-bottom-left-radius: calc($border-radius/2);
}

.rounded-circle 
{
    border-top-left-radius: 50%;
    border-top-right-radius: 50%;
    border-bottom-right-radius: 50%;
    border-bottom-left-radius: 50%;
}

.rounded-pill 
{     
    border-top-left-radius: 50rem;
    border-top-right-radius: 50rem;
    border-bottom-right-radius: 50rem;
    border-bottom-left-radius: 50rem;
}

.flat
{
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
}

.flat-top
{
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
}

.flat-bottom
{
    border-bottom-right-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
}

.flat-left
{
    border-top-left-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
}

.flat-right
{
    border-top-right-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
}

@each $key, $colour-map in $colours
{
    @each $cm-key, $value in $colour-map
    {
        $key-name: "-" + $cm-key;

        @if $cm-key == "base"
        {
            $key-name: "";
        }

        .border-#{$key}#{$key-name} 
        {
            @include borderAll($value, $border-thickness, true);
        }

        .border-top-#{$key}#{$key-name}
        {
            @include borderTop($value, $border-thickness, true);
        }

        .border-right-#{$key}#{$key-name}
        {
            @include borderRight($value, $border-thickness, true);
        }

        .border-bottom-#{$key}#{$key-name}
        {
            @include borderBottom($value, $border-thickness, true);
        }

        .border-left-#{$key}#{$key-name}
        {
            @include borderLeft($value, $border-thickness, true);
        }
    }    
}